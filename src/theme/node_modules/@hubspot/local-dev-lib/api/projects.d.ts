/// <reference types="node" />
/// <reference types="node" />
import { HubSpotPromise, QueryParams } from '../types/Http';
import { Project, FetchProjectResponse, UploadProjectResponse, ProjectSettings, FetchPlatformVersionResponse, WarnLogsResponse, UploadIRResponse } from '../types/Project';
import { Build, FetchProjectBuildsResponse } from '../types/Build';
import { ComponentStructureResponse, ProjectComponentsMetadata } from '../types/ComponentStructure';
import { Deploy, ProjectDeployResponse } from '../types/Deploy';
import { MigrateAppResponse, CloneAppResponse, PollAppResponse } from '../types/Migration';
export declare function fetchProjects(accountId: number): HubSpotPromise<FetchProjectResponse>;
export declare function createProject(accountId: number, name: string): HubSpotPromise<Project>;
export declare function uploadProject(accountId: number, projectName: string, projectFile: string, uploadMessage: string, platformVersion?: string, intermediateRepresentation?: unknown): HubSpotPromise<UploadProjectResponse | UploadIRResponse>;
export declare function fetchProject(accountId: number, projectName: string): HubSpotPromise<Project>;
export declare function fetchProjectComponentsMetadata(accountId: number, projectId: number): HubSpotPromise<ProjectComponentsMetadata>;
export declare function downloadProject(accountId: number, projectName: string, buildId: number): HubSpotPromise<Buffer>;
export declare function deleteProject(accountId: number, projectName: string): HubSpotPromise<void>;
export declare function fetchPlatformVersions(accountId: number): HubSpotPromise<FetchPlatformVersionResponse>;
export declare function fetchProjectBuilds(accountId: number, projectName: string, params?: QueryParams): HubSpotPromise<FetchProjectBuildsResponse>;
export declare function getBuildStatus(accountId: number, projectName: string, buildId: number): HubSpotPromise<Build>;
export declare function getBuildStructure(accountId: number, projectName: string, buildId: number): HubSpotPromise<ComponentStructureResponse>;
export declare function deployProject(accountId: number, projectName: string, buildId: number, useNewDeployApi?: boolean): HubSpotPromise<ProjectDeployResponse>;
export declare function getDeployStatus(accountId: number, projectName: string, deployId: number): HubSpotPromise<Deploy>;
export declare function getDeployStructure(accountId: number, projectName: string, deployId: number): HubSpotPromise<ComponentStructureResponse>;
export declare function fetchProjectSettings(accountId: number, projectName: string): HubSpotPromise<ProjectSettings>;
export declare function provisionBuild(accountId: number, projectName: string, platformVersion?: string): HubSpotPromise<Build>;
export declare function queueBuild(accountId: number, projectName: string, platformVersion?: string): HubSpotPromise<void>;
export declare function uploadFileToBuild(accountId: number, projectName: string, filePath: string, path: string): HubSpotPromise<void>;
export declare function deleteFileFromBuild(accountId: number, projectName: string, path: string): HubSpotPromise<void>;
export declare function cancelStagedBuild(accountId: number, projectName: string): HubSpotPromise<void>;
export declare function fetchBuildWarnLogs(accountId: number, projectName: string, buildId: number): HubSpotPromise<WarnLogsResponse>;
export declare function fetchDeployWarnLogs(accountId: number, projectName: string, deployId: number): HubSpotPromise<WarnLogsResponse>;
/**
 * @deprecated
 */
export declare function migrateApp(accountId: number, appId: number, projectName: string): HubSpotPromise<MigrateAppResponse>;
/**
 * @deprecated
 */
export declare function checkMigrationStatus(accountId: number, id: number): HubSpotPromise<PollAppResponse>;
/**
 * @deprecated
 */
export declare function cloneApp(accountId: number, appId: number): HubSpotPromise<CloneAppResponse>;
/**
 * @deprecated
 */
export declare function checkCloneStatus(accountId: number, exportId: number): HubSpotPromise<CloneAppResponse>;
/**
 * @deprecated
 */
export declare function downloadClonedProject(accountId: number, exportId: number): HubSpotPromise<Buffer>;
